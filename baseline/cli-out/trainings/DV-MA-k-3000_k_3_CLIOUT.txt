Namespace(train=True, input_pairs='data/train/DV-MA-k-3000/k_3', input_truth='data/train/DV-MA-k-3000/k_3', test_dir=None, output='out/DV-MA-k-3000/k_3', model_dir='models/baseline/DV-MA-k-3000/k_3', seed=2020, vocab_size=3000, ngram_size=4, num_iterations=0, dropout=0.5)
-> constructing vectorizer
-> calculating pairwise similarities
-> grid search p1/p2:
optimal p1/p2: 0.87 0.91
optimal score: {'auc': np.float64(0.55), 'c@1': 0.51, 'f_05_u': 0.547, 'F1': np.float64(0.667), 'brier': np.float64(0.715), 'overall': np.float64(0.598)}
-> determining optimal threshold
Dev results -> F1=0.6668817811479046 at th=0.4436936936936937
